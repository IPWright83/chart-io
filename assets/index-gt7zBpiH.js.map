{"version":3,"file":"index-gt7zBpiH.js","sources":["../../src/lib/components/LegendOverlay/getLegendPosition.ts","../../src/lib/components/LegendOverlay/getLegendMaxDimensions.ts","../../src/lib/components/LegendOverlay/Legend/index.ts","../../src/lib/components/LegendOverlay/LegendOverlay.tsx"],"sourcesContent":["export const LEGEND_MARGIN = 10;\n\n/**\n * Return the position that the legend should be positioned in\n * @param horizontalPosition     The horizontal position of the legend\n * @param verticalPosition       The vertical position of the legend\n * @returns                      A style object with positional information\n */\nexport function getLegendPosition(\n    horizontalPosition?: \"LEFT\" | \"RIGHT\" | \"CENTER\",\n    verticalPosition?: \"TOP\" | \"BOTTOM\" | \"CENTER\"\n) {\n    let left: number | string = null;\n    let right: number | string = null;\n    let bottom: number | string = null;\n    let top: number | string = null;\n    let transform: string = null;\n\n    // prettier-ignore\n    switch (horizontalPosition) {\n        case \"RIGHT\": right = LEGEND_MARGIN; break;\n        case \"LEFT\": left = LEGEND_MARGIN; break;\n        case \"CENTER\": left = \"50%\"; transform = \"translateX(-50%)\"; break;\n    }\n\n    // prettier-ignore\n    switch (verticalPosition) {\n        case \"BOTTOM\": bottom = LEGEND_MARGIN; break;\n        case \"TOP\": top = LEGEND_MARGIN; break;\n        case \"CENTER\": top = \"50%\"; transform = \"translateY(-50%)\"; break;\n    }\n\n    return {\n        position: \"absolute\",\n        left,\n        right,\n        transform,\n        top,\n        bottom,\n    };\n}\n","import { LEGEND_MARGIN } from \"./getLegendPosition\";\n\n/**\n * Return the max width/height that the legend can take\n * @param horizontalPosition     The horizontal position of the legend\n * @param verticalPosition       The vertical position of the legend\n * @param width                  The width of the chart\n * @param height                 The height of the chart\n * @param defaultMaxWidth        The max width of the legend when docked left or right\n * @param defaultMaxHeight       The max height of the legend when docked top or bottom\n * @returns                      A style object with the max width/height information\n */\nexport function getLegendMaxDimensions(\n    horizontalPosition: \"LEFT\" | \"RIGHT\" | \"CENTER\",\n    verticalPosition: \"TOP\" | \"BOTTOM\" | \"CENTER\",\n    width: number,\n    height: number,\n    defaultMaxWidth: number,\n    defaultMaxHeight: number\n) {\n    let maxWidth = defaultMaxWidth;\n    let maxHeight = defaultMaxHeight;\n\n    // prettier-ignore\n    switch (horizontalPosition) {\n        case \"RIGHT\": \n        case \"LEFT\":\n                maxHeight = height - (4 * LEGEND_MARGIN); \n                break;\n        default:  break;\n    }\n\n    // prettier-ignore\n    switch (verticalPosition) {\n        case \"BOTTOM\": \n        case \"TOP\": \n            maxWidth = width - (4 * LEGEND_MARGIN);\n            break;\n        default: break;\n    }\n\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\n","export * from \"./Legend\";\nexport * from \"./LegendItem\";\n","import { chartSelectors, IState } from \"@chart-io/core\";\nimport type { ILegendFormatter } from \"@chart-io/core\";\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { getLegendMaxDimensions } from \"./getLegendMaxDimensions\";\nimport { getLegendPosition } from \"./getLegendPosition\";\nimport { Legend } from \"./Legend\";\n\nexport interface ILegendOverlayProps {\n    /**\n     * The horizontal position of the legend\n     */\n    horizontalPosition?: \"LEFT\" | \"RIGHT\" | \"CENTER\";\n    /**\n     * The vertical position of the legend\n     */\n    verticalPosition?: \"TOP\" | \"BOTTOM\" | \"CENTER\";\n    /**\n     * A set of custom formatters for the Legend\n     */\n    formatters?: Record<string, ILegendFormatter>;\n}\n\nexport function LegendOverlay({\n    verticalPosition = \"CENTER\",\n    horizontalPosition = \"RIGHT\",\n    formatters = {},\n}: ILegendOverlayProps) {\n    const width = useSelector((s: IState) => chartSelectors.dimensions.width(s));\n    const height = useSelector((s: IState) => chartSelectors.dimensions.height(s));\n    const items = useSelector((s: IState) => chartSelectors.legend.items(s));\n    const showLegend = useSelector((s: IState) => chartSelectors.legend.isVisible(s));\n    const theme = useSelector((s: IState) => chartSelectors.theme(s));\n\n    if (!showLegend) {\n        return null;\n    }\n\n    const isHorizontal = verticalPosition == \"TOP\" || verticalPosition == \"BOTTOM\";\n    const positionStyle = {\n        ...getLegendPosition(horizontalPosition, verticalPosition),\n        ...getLegendMaxDimensions(\n            horizontalPosition,\n            verticalPosition,\n            width,\n            height,\n            theme.legend.defaultMaxWidth,\n            theme.legend.defaultMaxHeight,\n        ),\n    };\n\n    const style = {\n        width: \"100%\",\n        height: \"100%\",\n        pointerEvents: \"none\" as const,\n    };\n\n    return (\n        <foreignObject width={width} height={height} style={style}>\n            <Legend items={items} horizontal={isHorizontal} positionStyle={positionStyle} formatters={formatters} />\n        </foreignObject>\n    );\n}\n"],"names":["cov_20r8ry895g","path","hash","global","gcv","coverageData","coverage","actualCoverage","LEGEND_MARGIN","s","getLegendPosition","horizontalPosition","verticalPosition","f","left","right","bottom","top","transform","b","position","getLegendMaxDimensions","width","height","defaultMaxWidth","defaultMaxHeight","cov_2aq7tnyf1o","maxWidth","maxHeight","cov_7d34itk9m","cov_1nxl9zqqxi","LegendOverlay","formatters","useSelector","chartSelectors","dimensions","items","legend","showLegend","isVisible","theme"],"mappings":"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AA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,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"}