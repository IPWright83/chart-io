import{j as e}from"./jsx-runtime-BjG_zV1W.js";import{useMDXComponents as r}from"./index-D-2zTmTn.js";import{M as i,C as s}from"./index-Dw1MpZ3G.js";import{Default as p}from"./EventReceiver.stories-xpSDwnw4.js";import"./index-DpTt3J-R.js";import"./iframe-Bho3GZXG.js";import"./index-D5nvoAmD.js";import"./index-B77L4dcM.js";import"./index-DrFu-skq.js";import"./react-redux-QXbQKOoW.js";import"./index-CJyk9Ty5.js";import"./lodash-DOJiQ2Wu.js";import"./index-_rl-6daV.js";import"./renderChart-BLsEhK0I.js";import"./test-utils-C-DEfvFY.js";import"./client-CbGTh6y2.js";import"./index-Dcm7olAB.js";function o(n){const t={code:"code",h1:"h1",p:"p",...r(),...n.components};return e.jsxs(e.Fragment,{children:[e.jsx(i,{title:"Components/EventReceiver"}),`
`,e.jsx(t.h1,{id:"eventreceiver-component",children:"EventReceiver Component"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"<EventReceiver>"})," component is an internal component used for capturing mouse events on SVG based charts."]}),`
`,e.jsx(t.p,{children:"Some plots do not provide a suitable element to capture events on (such as a Line chart) so instead they are captured on this component and events are dispatched to the internal redux store - giving plots a chance to respond to these changes."}),`
`,e.jsx(s,{of:p})]})}function X(n={}){const{wrapper:t}={...r(),...n.components};return t?e.jsx(t,{...n,children:e.jsx(o,{...n})}):o(n)}export{X as default};
//# sourceMappingURL=EventReceiver-DRGD3aqy.js.map
