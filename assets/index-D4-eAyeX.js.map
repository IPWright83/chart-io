{"version":3,"file":"index-D4-eAyeX.js","sources":["../../src/lib/components/LegendOverlay/Legend/LegendItem/LegendItem.tsx"],"sourcesContent":["import { chartSelectors, IState } from \"@chart-io/core\";\nimport type { ILegendFormatter, ILegendItem } from \"@chart-io/core\";\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { getShape } from \"../../../Shapes\";\n\nexport interface ILegendItemProps extends ILegendItem {\n    /**\n     * A custom formatter for the Legend item\n     */\n    format?: ILegendFormatter;\n}\n\n/**\n * Represents a row within a Legend\n * @return {ReactElement}  The LegendItem component\n */\nexport function LegendItem({ name, icon, color, format = (name) => name }: ILegendItemProps) {\n    const theme = useSelector((s: IState) => chartSelectors.theme(s));\n\n    const Shape = getShape(icon);\n\n    const styles = {\n        legendItem: {\n            display: \"flex\" as const,\n            flexDirection: \"row\" as const,\n            userSelect: \"none\" as const,\n            pointerEvents: \"none\" as const,\n            color: theme.tooltip.text.toString(),\n            fontSize: theme.font.size,\n            fontFamily: theme.font.family,\n        },\n        legendValues: {\n            display: \"flex\" as const,\n            flexDirection: \"row\" as const,\n            justifyContent: \"space-between\" as const,\n            width: \"100%\",\n            flexGrow: 1,\n            flexShrink: 1,\n        },\n        legendSeriesName: {\n            marginRight: 15,\n            whiteSpace: \"nowrap\" as const,\n            overflow: \"hidden\" as const,\n            textOverflow: \"ellipsis\" as const,\n            flexGrow: 1,\n            flexShrink: 1,\n        },\n    };\n\n    return (\n        <div className=\"chart-io legend-item\" style={styles.legendItem}>\n            {Shape && <Shape fill={color} />}\n            <div className=\"chart-io legend-values\" style={styles.legendValues}>\n                <span className=\"chart-io legend-series-name\" style={styles.legendSeriesName}>\n                    {format(name)}\n                </span>\n            </div>\n        </div>\n    );\n}\n"],"names":["cov_ul421nnfm","path","hash","global","gcv","coverageData","coverage","actualCoverage","LegendItem","name","icon","color","format","b","name2","f","theme","s","useSelector","chartSelectors","Shape","getShape","styles","legendItem","display","flexDirection","userSelect","pointerEvents","tooltip","text","toString","fontSize","font","size","fontFamily","family","legendValues","justifyContent","width","flexGrow"],"mappings":"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"}