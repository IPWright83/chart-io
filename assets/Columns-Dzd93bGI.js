import{j as V}from"./jsx-runtime-BjG_zV1W.js";import{r as T,R as oe}from"./index-DpTt3J-R.js";import{c as Z,l as z,u as p,a as f,i as te,n as X}from"./react-redux-QXbQKOoW.js";import{a as J,w as Y,b as Q}from"./index-_rl-6daV.js";import{a as ae,b as F,d as $}from"./index-CRk78wGA.js";import{r as R}from"./renderCanvas-Cl5RbTFF.js";function S(){var e="/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/useFocused.ts",t="43e87b0ef09569601cd72b5271c59310acfcfcda",l=window,o="__coverage__",u={path:"/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/useFocused.ts",statementMap:{0:{start:{line:4,column:26},end:{line:11,column:1}},1:{start:{line:5,column:23},end:{line:5,column:33}},2:{start:{line:6,column:32},end:{line:6,column:46}},3:{start:{line:7,column:2},end:{line:9,column:64}},4:{start:{line:8,column:4},end:{line:8,column:71}},5:{start:{line:10,column:2},end:{line:10,column:20}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:4,column:26},end:{line:4,column:27}},loc:{start:{line:4,column:58},end:{line:11,column:1}},line:4},1:{name:"(anonymous_1)",decl:{start:{line:7,column:12},end:{line:7,column:13}},loc:{start:{line:7,column:18},end:{line:9,column:3}},line:7}},branchMap:{},s:{0:0,1:0,2:0,3:0,4:0,5:0},f:{0:0,1:0},b:{},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/useFocused.ts"],names:[],mappings:"AAAA,SAAS,cAAc;AAEvB,SAAS,WAAW,gBAAgB;AACpC,SAAS,gBAAgB;AAUlB,aAAM,aAAa,CAAC,EAAE,QAAQ,OAAO,QAAQ,MAA8D;AAC9G,QAAM,EAAE,SAAS,IAAI,SAAS;AAC9B,QAAM,CAAC,SAAS,UAAU,IAAI,SAAS,IAAI;AAE3C,YAAU,MAAM;AACZ,WAAO,OAAO,MAAM,EAAE,UAAU,QAAQ,SAAS,OAAO,QAAQ,CAAC;AAAA,EACrE,GAAG,CAAC,UAAU,SAAS,QAAQ,MAAM,OAAO,eAAe,CAAC;AAE5D,SAAO;AACX;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"43e87b0ef09569601cd72b5271c59310acfcfcda"},n=l[o]||(l[o]={});(!n[e]||n[e].hash!==t)&&(n[e]=u);var a=n[e];return S=function(){return a},a}S();S().s[0]++;const W=({xScale:e,theme:t,grouped:l})=>{S().f[0]++;const{dispatch:o}=(S().s[1]++,Z()),[u,n]=(S().s[2]++,T.useState(null));return S().s[3]++,T.useEffect(()=>(S().f[1]++,S().s[4]++,z.focus({dispatch:o,xScale:e,focused:u,theme:t,grouped:l})),[o,u,e,t.series.selectedOpacity]),S().s[5]++,n};function A(){var e="/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/useTooltip.ts",t="10cb4adb161b6509118091e733e780fa62a4eab6",l=window,o="__coverage__",u={path:"/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/useTooltip.ts",statementMap:{0:{start:{line:4,column:19},end:{line:27,column:1}},1:{start:{line:5,column:23},end:{line:5,column:33}},2:{start:{line:6,column:28},end:{line:6,column:42}},3:{start:{line:7,column:30},end:{line:7,column:44}},4:{start:{line:8,column:22},end:{line:8,column:36}},5:{start:{line:9,column:44},end:{line:9,column:58}},6:{start:{line:10,column:2},end:{line:12,column:47}},7:{start:{line:11,column:4},end:{line:11,column:84}},8:{start:{line:13,column:2},end:{line:26,column:4}},9:{start:{line:14,column:4},end:{line:20,column:5}},10:{start:{line:15,column:6},end:{line:15,column:23}},11:{start:{line:16,column:6},end:{line:16,column:24}},12:{start:{line:17,column:6},end:{line:17,column:31}},13:{start:{line:18,column:6},end:{line:18,column:20}},14:{start:{line:19,column:6},end:{line:19,column:13}},15:{start:{line:21,column:58},end:{line:21,column:71}},16:{start:{line:22,column:4},end:{line:22,column:26}},17:{start:{line:23,column:4},end:{line:23,column:28}},18:{start:{line:24,column:4},end:{line:24,column:15}},19:{start:{line:25,column:4},end:{line:25,column:21}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:4,column:19},end:{line:4,column:20}},loc:{start:{line:4,column:30},end:{line:27,column:1}},line:4},1:{name:"(anonymous_1)",decl:{start:{line:10,column:12},end:{line:10,column:13}},loc:{start:{line:10,column:18},end:{line:12,column:3}},line:10},2:{name:"(anonymous_2)",decl:{start:{line:13,column:9},end:{line:13,column:10}},loc:{start:{line:13,column:28},end:{line:26,column:3}},line:13}},branchMap:{0:{loc:{start:{line:14,column:4},end:{line:20,column:5}},type:"if",locations:[{start:{line:14,column:4},end:{line:20,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:14}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0},f:{0:0,1:0,2:0},b:{0:[0,0]},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/useTooltip.ts"],names:["datum","ys"],mappings:"AACA,SAAS,cAAc;AAEvB,SAAS,WAAW,gBAAgB;AACpC,SAAS,gBAAgB;AAezB,MAAM,aAAa,CAAC,EAAE,EAAE,MAA0F;AAC9G,QAAM,EAAE,SAAS,IAAI,SAAS;AAC9B,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAS,IAAI;AACvC,QAAM,CAAC,QAAQ,SAAS,IAAI,SAAS,IAAI;AACzC,QAAM,CAAC,IAAI,KAAK,IAAI,SAAS,IAAI;AACjC,QAAM,CAAC,eAAe,gBAAgB,IAAI,SAAS,IAAI;AAEvD,YAAU,MAAM;AACZ,WAAO,OAAO,QAAQ,EAAE,UAAU,OAAO,QAAQ,OAAO,eAAe,GAAG,GAAG,CAAC;AAAA,EAClF,GAAG,CAAC,UAAU,QAAQ,GAAG,IAAI,aAAa,CAAC;AAM3C,SAAO,CAAC,kBAAkC;AACtC,QAAI,CAAC,eAAe;AAChB,eAAS,MAAS;AAClB,gBAAU,MAAS;AACnB,uBAAiB,MAAS;AAC1B,YAAM,MAAS;AACf;AAAA,IACJ;AAEA,UAAM,EAAE,OAAAA,QAAO,OAAO,YAAY,IAAAC,IAAG,IAAI;AAEzC,cAAU,UAAU;AACpB,qBAAiB,KAAK;AACtB,UAAMA,GAAE;AACR,aAASD,MAAK;AAAA,EAClB;AACJ;AAEA,SAAS;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"10cb4adb161b6509118091e733e780fa62a4eab6"},n=l[o]||(l[o]={});(!n[e]||n[e].hash!==t)&&(n[e]=u);var a=n[e];return A=function(){return a},a}A();A().s[0]++;const K=({x:e})=>{A().f[0]++;const{dispatch:t}=(A().s[1]++,Z()),[l,o]=(A().s[2]++,T.useState(null)),[u,n]=(A().s[3]++,T.useState(null)),[a,v]=(A().s[4]++,T.useState(null)),[g,y]=(A().s[5]++,T.useState(null));return A().s[6]++,T.useEffect(()=>(A().f[1]++,A().s[7]++,z.tooltip({dispatch:t,datum:l,colors:u,event:g,x:e,ys:a})),[t,u,e,a,g]),A().s[8]++,M=>{if(A().f[2]++,A().s[9]++,M)A().b[0][1]++;else{A().b[0][0]++,A().s[10]++,o(void 0),A().s[11]++,n(void 0),A().s[12]++,y(void 0),A().s[13]++,v(void 0),A().s[14]++;return}const{datum:q,event:k,fillColors:I,ys:E}=(A().s[15]++,M);A().s[16]++,n(I),A().s[17]++,y(k),A().s[18]++,v(E),A().s[19]++,o(q)}};function r(){var e="/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/Column/ColumnBase.tsx",t="64012187580bb57851c08d99b95ea3f938b5f4f6",l=window,o="__coverage__",u={path:"/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/Column/ColumnBase.tsx",statementMap:{0:{start:{line:21,column:15},end:{line:21,column:57}},1:{start:{line:21,column:34},end:{line:21,column:56}},2:{start:{line:22,column:16},end:{line:22,column:70}},3:{start:{line:22,column:35},end:{line:22,column:69}},4:{start:{line:23,column:17},end:{line:23,column:72}},5:{start:{line:23,column:36},end:{line:23,column:71}},6:{start:{line:24,column:17},end:{line:24,column:84}},7:{start:{line:24,column:36},end:{line:24,column:83}},8:{start:{line:25,column:17},end:{line:25,column:84}},9:{start:{line:25,column:36},end:{line:25,column:83}},10:{start:{line:26,column:16},end:{line:26,column:59}},11:{start:{line:26,column:35},end:{line:26,column:58}},12:{start:{line:27,column:28},end:{line:27,column:83}},13:{start:{line:27,column:47},end:{line:27,column:82}},14:{start:{line:28,column:20},end:{line:28,column:66}},15:{start:{line:29,column:2},end:{line:29,column:43}},16:{start:{line:30,column:2},end:{line:30,column:54}},17:{start:{line:31,column:20},end:{line:31,column:37}},18:{start:{line:32,column:18},end:{line:32,column:63}},19:{start:{line:33,column:2},end:{line:68,column:5}},20:{start:{line:34,column:23},end:{line:50,column:6}},21:{start:{line:51,column:4},end:{line:51,column:69}},22:{start:{line:69,column:2},end:{line:69,column:14}},23:{start:{line:71,column:0},end:{line:77,column:50}},24:{start:{line:73,column:4},end:{line:73,column:42}},25:{start:{line:75,column:4},end:{line:75,column:2957}}},fnMap:{0:{name:"ColumnBase",decl:{start:{line:7,column:16},end:{line:7,column:26}},loc:{start:{line:20,column:3},end:{line:70,column:1}},line:20},1:{name:"(anonymous_1)",decl:{start:{line:21,column:27},end:{line:21,column:28}},loc:{start:{line:21,column:34},end:{line:21,column:56}},line:21},2:{name:"(anonymous_2)",decl:{start:{line:22,column:28},end:{line:22,column:29}},loc:{start:{line:22,column:35},end:{line:22,column:69}},line:22},3:{name:"(anonymous_3)",decl:{start:{line:23,column:29},end:{line:23,column:30}},loc:{start:{line:23,column:36},end:{line:23,column:71}},line:23},4:{name:"(anonymous_4)",decl:{start:{line:24,column:29},end:{line:24,column:30}},loc:{start:{line:24,column:36},end:{line:24,column:83}},line:24},5:{name:"(anonymous_5)",decl:{start:{line:25,column:29},end:{line:25,column:30}},loc:{start:{line:25,column:36},end:{line:25,column:83}},line:25},6:{name:"(anonymous_6)",decl:{start:{line:26,column:28},end:{line:26,column:29}},loc:{start:{line:26,column:35},end:{line:26,column:58}},line:26},7:{name:"(anonymous_7)",decl:{start:{line:27,column:40},end:{line:27,column:41}},loc:{start:{line:27,column:47},end:{line:27,column:82}},line:27},8:{name:"(anonymous_8)",decl:{start:{line:33,column:12},end:{line:33,column:13}},loc:{start:{line:33,column:18},end:{line:52,column:3}},line:33}},branchMap:{0:{loc:{start:{line:13,column:2},end:{line:13,column:20}},type:"default-arg",locations:[{start:{line:13,column:14},end:{line:13,column:20}}],line:13},1:{loc:{start:{line:14,column:2},end:{line:14,column:21}},type:"default-arg",locations:[{start:{line:14,column:17},end:{line:14,column:21}}],line:14},2:{loc:{start:{line:15,column:2},end:{line:15,column:20}},type:"default-arg",locations:[{start:{line:15,column:16},end:{line:15,column:20}}],line:15},3:{loc:{start:{line:28,column:32},end:{line:28,column:63}},type:"binary-expr",locations:[{start:{line:28,column:32},end:{line:28,column:37}},{start:{line:28,column:41},end:{line:28,column:63}}],line:28}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0},b:{0:[0],1:[0],2:[0],3:[0,0]},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/Column/ColumnBase.tsx"],names:[],mappings:"AAAA;AAGA;AAEA;AAEA;AACA;AACA;AAcO;AAAoB;AACvB;AACA;AACA;AACA;AACA;AACY;AACG;AACD;AACd;AACA;AACA;AAEJ;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACI;AAAiC;AAC7B;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AAA+D;AAChE;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AACJ;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"64012187580bb57851c08d99b95ea3f938b5f4f6"},n=l[o]||(l[o]={});(!n[e]||n[e].hash!==t)&&(n[e]=u);var a=n[e];return r=function(){return a},a}r();function U({x:e,y:t,canvas:l,renderVirtualCanvas:o,color:u,scaleMode:n=(r().b[0][0]++,"plot"),showInLegend:a=(r().b[1][0]++,!0),interactive:v=(r().b[2][0]++,!0),onMouseOver:g,onMouseOut:y,onClick:M,layer:q}){r().f[0]++;const k=(r().s[0]++,p(b=>(r().f[1]++,r().s[1]++,f.data(b)))),I=(r().s[2]++,p(b=>(r().f[2]++,r().s[3]++,f.dimensions.width(b)))),E=(r().s[4]++,p(b=>(r().f[3]++,r().s[5]++,f.dimensions.height(b)))),_=(r().s[6]++,p(b=>(r().f[4]++,r().s[7]++,f.scales.getScale(b,e,n)))),B=(r().s[8]++,p(b=>(r().f[5]++,r().s[9]++,f.scales.getScale(b,t,n)))),w=(r().s[10]++,p(b=>(r().f[6]++,r().s[11]++,f.theme(b)))),O=(r().s[12]++,p(b=>(r().f[7]++,r().s[13]++,f.animationDuration(b)))),G=(r().s[14]++,te.color(`${r().b[3][0]++,u??(r().b[3][1]++,w.series.colors[0])}`));r().s[15]++,G.opacity=w.series.opacity,r().s[16]++,ae(t,"square",a,G);const j=(r().s[17]++,K({x:e})),m=(r().s[18]++,W({xScale:_,theme:w,grouped:!1}));return r().s[19]++,F(()=>{r().f[8]++;const{update:b}=(r().s[20]++,z.render({animationDuration:O,interactive:v,layer:q.current,data:k,fillColor:G,onMouseOver:g,onMouseOut:y,onClick:M,onFocus:m,onTooltip:j,theme:w,x:e,y:t,xScale:_,yScale:B}));r().s[21]++,R(l,o,I,E,b)},[e,t,k,l,o,_,B,q,O,g,y,M,u,E,I]),r().s[22]++,null}r().s[23]++;try{r().s[24]++,U.displayName="ColumnBase",r().s[25]++,U.__docgenInfo={description:"Represents a Column Plot",displayName:"ColumnBase",props:{renderVirtualCanvas:{defaultValue:null,description:"This is an internally used function to allow the scatter plot to render to a virtual canvas",name:"renderVirtualCanvas",required:!1,type:{name:"(update: Transition<Element, unknown, any, unknown>) => void"}},onMouseOver:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse moves over an element for the first time",name:"onMouseOver",required:!1,type:{name:"IOnMouseOver"}},onMouseOut:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse moves out an element",name:"onMouseOut",required:!1,type:{name:"IOnMouseOut"}},onClick:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse clicks on an element",name:"onClick",required:!1,type:{name:"IOnClick"}},layer:{defaultValue:{value:"undefined"},description:"The layer to be rendered upon. Typically this is an `<svg:g>` or a fake HTMLElement when using canvas.",name:"layer",required:!0,type:{name:"MutableRefObject<Element>"}},x:{defaultValue:null,description:"The key of the field used for the x position",name:"x",required:!0,type:{name:"string"}},y:{defaultValue:null,description:"The key of the field used for the y position",name:"y",required:!0,type:{name:"string"}},noClip:{defaultValue:null,description:"Should we supress clipping for this plot.",name:"noClip",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"The color to use for the points",name:"color",required:!1,type:{name:"IColor"}},interactive:{defaultValue:{value:"true"},description:"Should the plot be interactive and be able to trigger markers & tooltips?",name:"interactive",required:!1,type:{name:"boolean"}},showInLegend:{defaultValue:{value:"true"},description:"Should this series feature in the Legend?",name:"showInLegend",required:!1,type:{name:"boolean"}},canvas:{defaultValue:null,description:"An HTML Canvas if the plot should be rendering to canvas instead",name:"canvas",required:!1,type:{name:"HTMLCanvasElement"}},scaleMode:{defaultValue:{value:"plot"},description:`An internal setting, to prefer using a brush scale. This is set automatically
on cloned plots by the <Brush /> components. You should not need to use it directly`,name:"scaleMode",required:!1,type:{name:"enum",value:[{value:'"plot"'},{value:'"brush"'}]}}}}}catch{}function C(){var e="/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/Column/Column.tsx",t="3955174449a379d8f39d50b292785786fe86cec1",l=window,o="__coverage__",u={path:"/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/Column/Column.tsx",statementMap:{0:{start:{line:4,column:21},end:{line:4,column:70}},1:{start:{line:5,column:18},end:{line:5,column:64}},2:{start:{line:7,column:2},end:{line:9,column:3}},3:{start:{line:8,column:4},end:{line:8,column:59}},4:{start:{line:10,column:2},end:{line:10,column:54}},5:{start:{line:12,column:0},end:{line:12,column:36}},6:{start:{line:13,column:0},end:{line:13,column:21}},7:{start:{line:14,column:0},end:{line:17,column:2}},8:{start:{line:18,column:0},end:{line:21,column:2}},9:{start:{line:22,column:0},end:{line:28,column:50}},10:{start:{line:24,column:4},end:{line:24,column:34}},11:{start:{line:26,column:4},end:{line:26,column:2635}}},fnMap:{0:{name:"Column",decl:{start:{line:6,column:16},end:{line:6,column:22}},loc:{start:{line:6,column:56},end:{line:11,column:1}},line:6}},branchMap:{0:{loc:{start:{line:6,column:25},end:{line:6,column:42}},type:"default-arg",locations:[{start:{line:6,column:37},end:{line:6,column:42}}],line:6},1:{loc:{start:{line:7,column:2},end:{line:9,column:3}},type:"if",locations:[{start:{line:7,column:2},end:{line:9,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:7}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0},f:{0:0},b:{0:[0],1:[0,0]},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/Column/Column.tsx"],names:[],mappings:"AAwBe;AAtBf;AAEA;AASA;AACA;AAQO;AACH;AACI;AAAgC;AAGpC;AACJ;AAEA;AACA;AACA;AAAe;AACC;AAEhB;AACA;AAAc;AACE;AAEhB;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3955174449a379d8f39d50b292785786fe86cec1"},n=l[o]||(l[o]={});(!n[e]||n[e].hash!==t)&&(n[e]=u);var a=n[e];return C=function(){return a},a}C();const ue=(C().s[0]++,J(Q(U),"plot column")),re=(C().s[1]++,Y(Q(U),"plot column"));function x({useCanvas:e=(C().b[0][0]++,!1),...t}){return C().f[0]++,C().s[2]++,e?(C().b[1][0]++,C().s[3]++,V.jsx(ue,{...t})):(C().b[1][1]++,C().s[4]++,V.jsx(re,{...t}))}C().s[5]++;x.requiresVirtualCanvas=!0;C().s[6]++;x.isPlot=!0;C().s[7]++;x.brush={horizontal:!0,vertical:!1};C().s[8]++;x.zoom={horizontal:!0,vertical:!1};C().s[9]++;try{C().s[10]++,x.displayName="Column",C().s[11]++,x.__docgenInfo={description:"Represents a Column plot",displayName:"Column",props:{useCanvas:{defaultValue:{value:"false"},description:"Should Canvas be used instead of SVG?",name:"useCanvas",required:!1,type:{name:"boolean"}},x:{defaultValue:null,description:"The key of the field used for the x position",name:"x",required:!0,type:{name:"string"}},interactive:{defaultValue:null,description:"Should the plot be interactive and be able to trigger markers & tooltips?",name:"interactive",required:!1,type:{name:"boolean"}},renderVirtualCanvas:{defaultValue:null,description:"This is an internally used function to allow the scatter plot to render to a virtual canvas",name:"renderVirtualCanvas",required:!1,type:{name:"(update: Transition<Element, unknown, any, unknown>) => void"}},onMouseOver:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse moves over an element for the first time",name:"onMouseOver",required:!1,type:{name:"IOnMouseOver"}},onMouseOut:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse moves out an element",name:"onMouseOut",required:!1,type:{name:"IOnMouseOut"}},onClick:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse clicks on an element",name:"onClick",required:!1,type:{name:"IOnClick"}},y:{defaultValue:null,description:"The key of the field used for the y position",name:"y",required:!0,type:{name:"string"}},noClip:{defaultValue:null,description:"Should we supress clipping for this plot.",name:"noClip",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"The color to use for the points",name:"color",required:!1,type:{name:"IColor"}},showInLegend:{defaultValue:null,description:"Should this series feature in the Legend?",name:"showInLegend",required:!1,type:{name:"boolean"}},scaleMode:{defaultValue:null,description:`An internal setting, to prefer using a brush scale. This is set automatically
on cloned plots by the <Brush /> components. You should not need to use it directly`,name:"scaleMode",required:!1,type:{name:"enum",value:[{value:'"plot"'},{value:'"brush"'}]}}}}}catch{}function ee(){var e="/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/Column/index.ts",t="ef74b8589bfb79a8ddcee62d61c6dd13b29ecb8a",l=window,o="__coverage__",u={path:"/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/Column/index.ts",statementMap:{},fnMap:{},branchMap:{},s:{},f:{},b:{},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/Column/index.ts"],names:[],mappings:"AAAA,cAAc;AACd,cAAc;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ef74b8589bfb79a8ddcee62d61c6dd13b29ecb8a"},n=l[o]||(l[o]={});(!n[e]||n[e].hash!==t)&&(n[e]=u);var a=n[e];return ee=function(){return a},a}ee();function s(){var e="/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/StackedColumn/StackedColumnBase.tsx",t="1e0cc10abd9d02c570835440c96e8c0121fec75f",l=window,o="__coverage__",u={path:"/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/StackedColumn/StackedColumnBase.tsx",statementMap:{0:{start:{line:21,column:15},end:{line:21,column:57}},1:{start:{line:21,column:34},end:{line:21,column:56}},2:{start:{line:22,column:17},end:{line:22,column:72}},3:{start:{line:22,column:36},end:{line:22,column:71}},4:{start:{line:23,column:16},end:{line:23,column:70}},5:{start:{line:23,column:35},end:{line:23,column:69}},6:{start:{line:24,column:17},end:{line:24,column:84}},7:{start:{line:24,column:36},end:{line:24,column:83}},8:{start:{line:25,column:17},end:{line:25,column:88}},9:{start:{line:25,column:36},end:{line:25,column:87}},10:{start:{line:26,column:16},end:{line:26,column:59}},11:{start:{line:26,column:35},end:{line:26,column:58}},12:{start:{line:27,column:28},end:{line:27,column:83}},13:{start:{line:27,column:47},end:{line:27,column:82}},14:{start:{line:28,column:20},end:{line:28,column:37}},15:{start:{line:29,column:18},end:{line:29,column:63}},16:{start:{line:30,column:2},end:{line:30,column:53}},17:{start:{line:31,column:2},end:{line:50,column:96}},18:{start:{line:32,column:23},end:{line:48,column:6}},19:{start:{line:49,column:4},end:{line:49,column:69}},20:{start:{line:51,column:2},end:{line:51,column:14}},21:{start:{line:53,column:0},end:{line:59,column:50}},22:{start:{line:55,column:4},end:{line:55,column:56}},23:{start:{line:57,column:4},end:{line:57,column:3161}}},fnMap:{0:{name:"StackedColumnBase",decl:{start:{line:7,column:16},end:{line:7,column:33}},loc:{start:{line:20,column:3},end:{line:52,column:1}},line:20},1:{name:"(anonymous_1)",decl:{start:{line:21,column:27},end:{line:21,column:28}},loc:{start:{line:21,column:34},end:{line:21,column:56}},line:21},2:{name:"(anonymous_2)",decl:{start:{line:22,column:29},end:{line:22,column:30}},loc:{start:{line:22,column:36},end:{line:22,column:71}},line:22},3:{name:"(anonymous_3)",decl:{start:{line:23,column:28},end:{line:23,column:29}},loc:{start:{line:23,column:35},end:{line:23,column:69}},line:23},4:{name:"(anonymous_4)",decl:{start:{line:24,column:29},end:{line:24,column:30}},loc:{start:{line:24,column:36},end:{line:24,column:83}},line:24},5:{name:"(anonymous_5)",decl:{start:{line:25,column:29},end:{line:25,column:30}},loc:{start:{line:25,column:36},end:{line:25,column:87}},line:25},6:{name:"(anonymous_6)",decl:{start:{line:26,column:28},end:{line:26,column:29}},loc:{start:{line:26,column:35},end:{line:26,column:58}},line:26},7:{name:"(anonymous_7)",decl:{start:{line:27,column:40},end:{line:27,column:41}},loc:{start:{line:27,column:47},end:{line:27,column:82}},line:27},8:{name:"(anonymous_8)",decl:{start:{line:31,column:12},end:{line:31,column:13}},loc:{start:{line:31,column:18},end:{line:50,column:3}},line:31}},branchMap:{0:{loc:{start:{line:11,column:2},end:{line:11,column:20}},type:"default-arg",locations:[{start:{line:11,column:14},end:{line:11,column:20}}],line:11},1:{loc:{start:{line:12,column:2},end:{line:12,column:21}},type:"default-arg",locations:[{start:{line:12,column:17},end:{line:12,column:21}}],line:12},2:{loc:{start:{line:13,column:2},end:{line:13,column:20}},type:"default-arg",locations:[{start:{line:13,column:16},end:{line:13,column:20}}],line:13}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0},b:{0:[0],1:[0],2:[0]},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/StackedColumn/StackedColumnBase.tsx"],names:[],mappings:"AAAA;AAGA;AAEA;AAEA;AACA;AACA;AAuBO;AAA2B;AAC9B;AACA;AACA;AACY;AACG;AACD;AACd;AACA;AACA;AACA;AACA;AAEJ;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACI;AAAyC;AACrC;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIJ;AAA+D;AAGnE;AACJ;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"1e0cc10abd9d02c570835440c96e8c0121fec75f"},n=l[o]||(l[o]={});(!n[e]||n[e].hash!==t)&&(n[e]=u);var a=n[e];return s=function(){return a},a}s();function H({x:e,ys:t,colors:l,scaleMode:o=(s().b[0][0]++,"plot"),showInLegend:u=(s().b[1][0]++,!0),interactive:n=(s().b[2][0]++,!0),onMouseOver:a,onMouseOut:v,onClick:g,layer:y,canvas:M,renderVirtualCanvas:q}){s().f[0]++;const k=(s().s[0]++,p(m=>(s().f[1]++,s().s[1]++,f.data(m)))),I=(s().s[2]++,p(m=>(s().f[2]++,s().s[3]++,f.dimensions.height(m)))),E=(s().s[4]++,p(m=>(s().f[3]++,s().s[5]++,f.dimensions.width(m)))),_=(s().s[6]++,p(m=>(s().f[4]++,s().s[7]++,f.scales.getScale(m,e,o)))),B=(s().s[8]++,p(m=>(s().f[5]++,s().s[9]++,f.scales.getScale(m,t[0],o)))),w=(s().s[10]++,p(m=>(s().f[6]++,s().s[11]++,f.theme(m)))),O=(s().s[12]++,p(m=>(s().f[7]++,s().s[13]++,f.animationDuration(m)))),G=(s().s[14]++,K({x:e})),j=(s().s[15]++,W({xScale:_,theme:w,grouped:!1}));return s().s[16]++,$(t,"square",u,l),s().s[17]++,F(()=>{s().f[8]++;const{update:m}=(s().s[18]++,z.stacked.render({animationDuration:O,interactive:n,layer:y.current,data:k,colors:l,onMouseOver:a,onMouseOut:v,onClick:g,onFocus:j,onTooltip:G,theme:w,x:e,ys:t,xScale:_,yScale:B}));s().s[19]++,R(M,q,E,I,m)},[e,t,k,_,B,y,O,a,v,g]),s().s[20]++,null}s().s[21]++;try{s().s[22]++,H.displayName="StackedColumnBase",s().s[23]++,H.__docgenInfo={description:"Represents a Column Plot",displayName:"StackedColumnBase",props:{renderVirtualCanvas:{defaultValue:null,description:"This is an internally used function to allow the scatter plot to render to a virtual canvas",name:"renderVirtualCanvas",required:!1,type:{name:"(update: Transition<Element, unknown, any, unknown>) => void"}},ys:{defaultValue:null,description:"The set of y fields to use to access the data for each plot",name:"ys",required:!0,type:{name:"string[]"}},colors:{defaultValue:null,description:"The set of colors to use for the different plot",name:"colors",required:!1,type:{name:"IColor[]"}},x:{defaultValue:null,description:"The key of the field used for the x position",name:"x",required:!0,type:{name:"string"}},interactive:{defaultValue:{value:"true"},description:"Should the plot be interactive and be able to trigger markers & tooltips?",name:"interactive",required:!1,type:{name:"boolean"}},layer:{defaultValue:{value:"undefined"},description:"The layer to be rendered upon. Typically this is an `<svg:g>` or a fake HTMLElement when using canvas.",name:"layer",required:!0,type:{name:"MutableRefObject<Element>"}},canvas:{defaultValue:null,description:"An HTML Canvas if the plot should be rendering to canvas instead",name:"canvas",required:!1,type:{name:"HTMLCanvasElement"}},onMouseOver:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse moves over an element for the first time",name:"onMouseOver",required:!1,type:{name:"IOnMouseOver"}},onMouseOut:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse moves out an element",name:"onMouseOut",required:!1,type:{name:"IOnMouseOut"}},onClick:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse clicks on an element",name:"onClick",required:!1,type:{name:"IOnClick"}},noClip:{defaultValue:null,description:"Should we supress clipping for this plot.",name:"noClip",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"The color to use for the points",name:"color",required:!1,type:{name:"IColor"}},showInLegend:{defaultValue:{value:"true"},description:"Should this series feature in the Legend?",name:"showInLegend",required:!1,type:{name:"boolean"}},scaleMode:{defaultValue:{value:"plot"},description:`An internal setting, to prefer using a brush scale. This is set automatically
on cloned plots by the <Brush /> components. You should not need to use it directly`,name:"scaleMode",required:!1,type:{name:"enum",value:[{value:'"plot"'},{value:'"brush"'}]}}}}}catch{}function h(){var e="/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/StackedColumn/StackedColumn.tsx",t="af9de4856ee3f1c8d5d0b062d347d0cf827a5120",l=window,o="__coverage__",u={path:"/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/StackedColumn/StackedColumn.tsx",statementMap:{0:{start:{line:6,column:28},end:{line:6,column:92}},1:{start:{line:7,column:25},end:{line:7,column:86}},2:{start:{line:9,column:16},end:{line:9,column:59}},3:{start:{line:9,column:35},end:{line:9,column:58}},4:{start:{line:10,column:18},end:{line:10,column:47}},5:{start:{line:11,column:2},end:{line:13,column:3}},6:{start:{line:12,column:4},end:{line:12,column:83}},7:{start:{line:14,column:2},end:{line:14,column:78}},8:{start:{line:16,column:0},end:{line:16,column:43}},9:{start:{line:17,column:0},end:{line:17,column:28}},10:{start:{line:18,column:0},end:{line:21,column:2}},11:{start:{line:22,column:0},end:{line:25,column:2}},12:{start:{line:26,column:0},end:{line:32,column:50}},13:{start:{line:28,column:4},end:{line:28,column:48}},14:{start:{line:30,column:4},end:{line:30,column:2816}}},fnMap:{0:{name:"StackedColumn",decl:{start:{line:8,column:16},end:{line:8,column:29}},loc:{start:{line:8,column:63},end:{line:15,column:1}},line:8},1:{name:"(anonymous_1)",decl:{start:{line:9,column:28},end:{line:9,column:29}},loc:{start:{line:9,column:35},end:{line:9,column:58}},line:9}},branchMap:{0:{loc:{start:{line:10,column:18},end:{line:10,column:47}},type:"binary-expr",locations:[{start:{line:10,column:18},end:{line:10,column:24}},{start:{line:10,column:28},end:{line:10,column:47}}],line:10},1:{loc:{start:{line:11,column:2},end:{line:13,column:3}},type:"if",locations:[{start:{line:11,column:2},end:{line:13,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:11}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0},f:{0:0,1:0},b:{0:[0,0],1:[0,0]},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/StackedColumn/StackedColumn.tsx"],names:[],mappings:"AA8Be;AA9Bf;AAGA;AAEA;AAEA;AASA;AACA;AAQO;AACH;AACA;AAEA;AACI;AAAwD;AAG5D;AACJ;AAEA;AACA;AACA;AAAsB;AACN;AAEhB;AACA;AAAqB;AACL;AAEhB;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"af9de4856ee3f1c8d5d0b062d347d0cf827a5120"},n=l[o]||(l[o]={});(!n[e]||n[e].hash!==t)&&(n[e]=u);var a=n[e];return h=function(){return a},a}h();const ie=(h().s[0]++,J(Q(H),"plot stacked-column")),se=(h().s[1]++,Y(Q(H),"plot stacked-column"));function P({useCanvas:e,colors:t,...l}){h().f[0]++;const o=(h().s[2]++,p(n=>(h().f[1]++,h().s[3]++,f.theme(n)))),u=(h().s[4]++,h().b[0][0]++,t||(h().b[0][1]++,o.series.colors));return h().s[5]++,e?(h().b[1][0]++,h().s[6]++,V.jsx(ie,{...l,colors:u})):(h().b[1][1]++,h().s[7]++,V.jsx(se,{...l,colors:u}))}h().s[8]++;P.requiresVirtualCanvas=!0;h().s[9]++;P.isPlot=!0;h().s[10]++;P.brush={horizontal:!0,vertical:!1};h().s[11]++;P.zoom={horizontal:!0,vertical:!1};h().s[12]++;try{h().s[13]++,P.displayName="StackedColumn",h().s[14]++,P.__docgenInfo={description:"Represents a Column plot",displayName:"StackedColumn",props:{useCanvas:{defaultValue:null,description:"Should Canvas be used instead of SVG?",name:"useCanvas",required:!1,type:{name:"boolean"}},ys:{defaultValue:null,description:"The set of y fields to use to access the data for each plot",name:"ys",required:!0,type:{name:"string[]"}},x:{defaultValue:null,description:"The key of the field used for the x position",name:"x",required:!0,type:{name:"string"}},colors:{defaultValue:null,description:"The set of colors to use for the different plot",name:"colors",required:!1,type:{name:"IColor[]"}},canvas:{defaultValue:null,description:"An HTML Canvas if the plot should be rendering to canvas instead",name:"canvas",required:!1,type:{name:"HTMLCanvasElement"}},renderVirtualCanvas:{defaultValue:null,description:"This is an internally used function to allow the scatter plot to render to a virtual canvas",name:"renderVirtualCanvas",required:!1,type:{name:"(update: Transition<Element, unknown, any, unknown>) => void"}},onMouseOver:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse moves over an element for the first time",name:"onMouseOver",required:!1,type:{name:"IOnMouseOver"}},onMouseOut:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse moves out an element",name:"onMouseOut",required:!1,type:{name:"IOnMouseOut"}},onClick:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse clicks on an element",name:"onClick",required:!1,type:{name:"IOnClick"}},noClip:{defaultValue:null,description:"Should we supress clipping for this plot.",name:"noClip",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"The color to use for the points",name:"color",required:!1,type:{name:"IColor"}},showInLegend:{defaultValue:null,description:"Should this series feature in the Legend?",name:"showInLegend",required:!1,type:{name:"boolean"}},scaleMode:{defaultValue:null,description:`An internal setting, to prefer using a brush scale. This is set automatically
on cloned plots by the <Brush /> components. You should not need to use it directly`,name:"scaleMode",required:!1,type:{name:"enum",value:[{value:'"plot"'},{value:'"brush"'}]}}}}}catch{}function ne(){var e="/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/StackedColumn/index.ts",t="740f254d0cece19656aadb31edb50a8ac152c51d",l=window,o="__coverage__",u={path:"/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/StackedColumn/index.ts",statementMap:{},fnMap:{},branchMap:{},s:{},f:{},b:{},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/StackedColumn/index.ts"],names:[],mappings:"AAAA,cAAc;AACd,cAAc;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"740f254d0cece19656aadb31edb50a8ac152c51d"},n=l[o]||(l[o]={});(!n[e]||n[e].hash!==t)&&(n[e]=u);var a=n[e];return ne=function(){return a},a}ne();function c(){var e="/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/GroupedColumn/GroupedColumnBase.tsx",t="c7d8dc026bbc33bdc3bf27a0b7a2b07aa83be71a",l=window,o="__coverage__",u={path:"/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/GroupedColumn/GroupedColumnBase.tsx",statementMap:{0:{start:{line:21,column:15},end:{line:21,column:57}},1:{start:{line:21,column:34},end:{line:21,column:56}},2:{start:{line:22,column:17},end:{line:22,column:72}},3:{start:{line:22,column:36},end:{line:22,column:71}},4:{start:{line:23,column:16},end:{line:23,column:70}},5:{start:{line:23,column:35},end:{line:23,column:69}},6:{start:{line:24,column:17},end:{line:24,column:84}},7:{start:{line:24,column:36},end:{line:24,column:83}},8:{start:{line:25,column:17},end:{line:25,column:88}},9:{start:{line:25,column:36},end:{line:25,column:87}},10:{start:{line:26,column:16},end:{line:26,column:59}},11:{start:{line:26,column:35},end:{line:26,column:58}},12:{start:{line:27,column:28},end:{line:27,column:83}},13:{start:{line:27,column:47},end:{line:27,column:82}},14:{start:{line:28,column:20},end:{line:28,column:37}},15:{start:{line:29,column:18},end:{line:29,column:62}},16:{start:{line:30,column:2},end:{line:30,column:53}},17:{start:{line:31,column:2},end:{line:50,column:96}},18:{start:{line:32,column:23},end:{line:48,column:6}},19:{start:{line:49,column:4},end:{line:49,column:69}},20:{start:{line:51,column:2},end:{line:51,column:14}},21:{start:{line:53,column:0},end:{line:59,column:50}},22:{start:{line:55,column:4},end:{line:55,column:56}},23:{start:{line:57,column:4},end:{line:57,column:3170}}},fnMap:{0:{name:"GroupedColumnBase",decl:{start:{line:7,column:16},end:{line:7,column:33}},loc:{start:{line:20,column:3},end:{line:52,column:1}},line:20},1:{name:"(anonymous_1)",decl:{start:{line:21,column:27},end:{line:21,column:28}},loc:{start:{line:21,column:34},end:{line:21,column:56}},line:21},2:{name:"(anonymous_2)",decl:{start:{line:22,column:29},end:{line:22,column:30}},loc:{start:{line:22,column:36},end:{line:22,column:71}},line:22},3:{name:"(anonymous_3)",decl:{start:{line:23,column:28},end:{line:23,column:29}},loc:{start:{line:23,column:35},end:{line:23,column:69}},line:23},4:{name:"(anonymous_4)",decl:{start:{line:24,column:29},end:{line:24,column:30}},loc:{start:{line:24,column:36},end:{line:24,column:83}},line:24},5:{name:"(anonymous_5)",decl:{start:{line:25,column:29},end:{line:25,column:30}},loc:{start:{line:25,column:36},end:{line:25,column:87}},line:25},6:{name:"(anonymous_6)",decl:{start:{line:26,column:28},end:{line:26,column:29}},loc:{start:{line:26,column:35},end:{line:26,column:58}},line:26},7:{name:"(anonymous_7)",decl:{start:{line:27,column:40},end:{line:27,column:41}},loc:{start:{line:27,column:47},end:{line:27,column:82}},line:27},8:{name:"(anonymous_8)",decl:{start:{line:31,column:12},end:{line:31,column:13}},loc:{start:{line:31,column:18},end:{line:50,column:3}},line:31}},branchMap:{0:{loc:{start:{line:11,column:2},end:{line:11,column:20}},type:"default-arg",locations:[{start:{line:11,column:14},end:{line:11,column:20}}],line:11},1:{loc:{start:{line:12,column:2},end:{line:12,column:21}},type:"default-arg",locations:[{start:{line:12,column:17},end:{line:12,column:21}}],line:12},2:{loc:{start:{line:13,column:2},end:{line:13,column:20}},type:"default-arg",locations:[{start:{line:13,column:16},end:{line:13,column:20}}],line:13}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0},b:{0:[0],1:[0],2:[0]},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/GroupedColumn/GroupedColumnBase.tsx"],names:[],mappings:"AAAA;AAGA;AAEA;AAEA;AACA;AACA;AAuBO;AAA2B;AAC9B;AACA;AACA;AACY;AACG;AACD;AACd;AACA;AACA;AACA;AACA;AAEJ;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACI;AAAyC;AACrC;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIJ;AAA+D;AAGnE;AACJ;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c7d8dc026bbc33bdc3bf27a0b7a2b07aa83be71a"},n=l[o]||(l[o]={});(!n[e]||n[e].hash!==t)&&(n[e]=u);var a=n[e];return c=function(){return a},a}c();function N({x:e,ys:t,colors:l,scaleMode:o=(c().b[0][0]++,"plot"),showInLegend:u=(c().b[1][0]++,!0),interactive:n=(c().b[2][0]++,!0),onMouseOver:a,onMouseOut:v,onClick:g,layer:y,canvas:M,renderVirtualCanvas:q}){c().f[0]++;const k=(c().s[0]++,p(m=>(c().f[1]++,c().s[1]++,f.data(m)))),I=(c().s[2]++,p(m=>(c().f[2]++,c().s[3]++,f.dimensions.height(m)))),E=(c().s[4]++,p(m=>(c().f[3]++,c().s[5]++,f.dimensions.width(m)))),_=(c().s[6]++,p(m=>(c().f[4]++,c().s[7]++,f.scales.getScale(m,e,o)))),B=(c().s[8]++,p(m=>(c().f[5]++,c().s[9]++,f.scales.getScale(m,t[0],o)))),w=(c().s[10]++,p(m=>(c().f[6]++,c().s[11]++,f.theme(m)))),O=(c().s[12]++,p(m=>(c().f[7]++,c().s[13]++,f.animationDuration(m)))),G=(c().s[14]++,K({x:e})),j=(c().s[15]++,W({xScale:_,theme:w,grouped:!0}));return c().s[16]++,$(t,"square",u,l),c().s[17]++,F(()=>{c().f[8]++;const{update:m}=(c().s[18]++,z.grouped.render({animationDuration:O,interactive:n,layer:y.current,data:k,colors:l,onMouseOver:a,onMouseOut:v,onClick:g,onFocus:j,onTooltip:G,theme:w,x:e,ys:t,xScale:_,yScale:B}));c().s[19]++,R(M,q,E,I,m)},[e,t,k,_,B,y,O,a,v,g]),c().s[20]++,null}c().s[21]++;try{c().s[22]++,N.displayName="GroupedColumnBase",c().s[23]++,N.__docgenInfo={description:"Represents a Groupled Column Plot",displayName:"GroupedColumnBase",props:{renderVirtualCanvas:{defaultValue:null,description:"This is an internally used function to allow the scatter plot to render to a virtual canvas",name:"renderVirtualCanvas",required:!1,type:{name:"(update: Transition<Element, unknown, any, unknown>) => void"}},ys:{defaultValue:null,description:"The set of y fields to use to access the data for each plot",name:"ys",required:!0,type:{name:"string[]"}},colors:{defaultValue:null,description:"The set of colors to use for the different plot",name:"colors",required:!1,type:{name:"IColor[]"}},x:{defaultValue:null,description:"The key of the field used for the x position",name:"x",required:!0,type:{name:"string"}},interactive:{defaultValue:{value:"true"},description:"Should the plot be interactive and be able to trigger markers & tooltips?",name:"interactive",required:!1,type:{name:"boolean"}},layer:{defaultValue:{value:"undefined"},description:"The layer to be rendered upon. Typically this is an `<svg:g>` or a fake HTMLElement when using canvas.",name:"layer",required:!0,type:{name:"MutableRefObject<Element>"}},canvas:{defaultValue:null,description:"An HTML Canvas if the plot should be rendering to canvas instead",name:"canvas",required:!1,type:{name:"HTMLCanvasElement"}},onMouseOver:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse moves over an element for the first time",name:"onMouseOver",required:!1,type:{name:"IOnMouseOver"}},onMouseOut:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse moves out an element",name:"onMouseOut",required:!1,type:{name:"IOnMouseOut"}},onClick:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse clicks on an element",name:"onClick",required:!1,type:{name:"IOnClick"}},noClip:{defaultValue:null,description:"Should we supress clipping for this plot.",name:"noClip",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"The color to use for the points",name:"color",required:!1,type:{name:"IColor"}},showInLegend:{defaultValue:{value:"true"},description:"Should this series feature in the Legend?",name:"showInLegend",required:!1,type:{name:"boolean"}},scaleMode:{defaultValue:{value:"plot"},description:`An internal setting, to prefer using a brush scale. This is set automatically
on cloned plots by the <Brush /> components. You should not need to use it directly`,name:"scaleMode",required:!1,type:{name:"enum",value:[{value:'"plot"'},{value:'"brush"'}]}}}}}catch{}function d(){var e="/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/GroupedColumn/GroupedColumn.tsx",t="941c05917a6a7e48c175c6a4b75c388004bcd632",l=window,o="__coverage__",u={path:"/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/GroupedColumn/GroupedColumn.tsx",statementMap:{0:{start:{line:6,column:28},end:{line:6,column:92}},1:{start:{line:7,column:25},end:{line:7,column:86}},2:{start:{line:9,column:16},end:{line:9,column:59}},3:{start:{line:9,column:35},end:{line:9,column:58}},4:{start:{line:10,column:18},end:{line:10,column:47}},5:{start:{line:11,column:2},end:{line:13,column:3}},6:{start:{line:12,column:4},end:{line:12,column:83}},7:{start:{line:14,column:2},end:{line:14,column:78}},8:{start:{line:16,column:0},end:{line:16,column:43}},9:{start:{line:17,column:0},end:{line:17,column:28}},10:{start:{line:18,column:0},end:{line:21,column:2}},11:{start:{line:22,column:0},end:{line:25,column:2}},12:{start:{line:26,column:0},end:{line:32,column:50}},13:{start:{line:28,column:4},end:{line:28,column:48}},14:{start:{line:30,column:4},end:{line:30,column:2830}}},fnMap:{0:{name:"GroupedColumn",decl:{start:{line:8,column:16},end:{line:8,column:29}},loc:{start:{line:8,column:71},end:{line:15,column:1}},line:8},1:{name:"(anonymous_1)",decl:{start:{line:9,column:28},end:{line:9,column:29}},loc:{start:{line:9,column:35},end:{line:9,column:58}},line:9}},branchMap:{0:{loc:{start:{line:8,column:32},end:{line:8,column:49}},type:"default-arg",locations:[{start:{line:8,column:44},end:{line:8,column:49}}],line:8},1:{loc:{start:{line:10,column:18},end:{line:10,column:47}},type:"binary-expr",locations:[{start:{line:10,column:18},end:{line:10,column:24}},{start:{line:10,column:28},end:{line:10,column:47}}],line:10},2:{loc:{start:{line:11,column:2},end:{line:13,column:3}},type:"if",locations:[{start:{line:11,column:2},end:{line:13,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:11}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0},f:{0:0,1:0},b:{0:[0],1:[0,0],2:[0,0]},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/GroupedColumn/GroupedColumn.tsx"],names:[],mappings:"AA8Be;AA9Bf;AAGA;AAEA;AAEA;AASA;AACA;AAQO;AACH;AACA;AAEA;AACI;AAAwD;AAG5D;AACJ;AAEA;AACA;AACA;AAAsB;AACN;AAEhB;AACA;AAAqB;AACL;AAEhB;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"941c05917a6a7e48c175c6a4b75c388004bcd632"},n=l[o]||(l[o]={});(!n[e]||n[e].hash!==t)&&(n[e]=u);var a=n[e];return d=function(){return a},a}d();const ce=(d().s[0]++,J(Q(N),"plot grouped-column")),me=(d().s[1]++,Y(Q(N),"plot grouped-column"));function D({useCanvas:e=(d().b[0][0]++,!1),colors:t,...l}){d().f[0]++;const o=(d().s[2]++,p(n=>(d().f[1]++,d().s[3]++,f.theme(n)))),u=(d().s[4]++,d().b[1][0]++,t||(d().b[1][1]++,o.series.colors));return d().s[5]++,e?(d().b[2][0]++,d().s[6]++,V.jsx(ce,{...l,colors:u})):(d().b[2][1]++,d().s[7]++,V.jsx(me,{...l,colors:u}))}d().s[8]++;D.requiresVirtualCanvas=!0;d().s[9]++;D.isPlot=!0;d().s[10]++;D.brush={horizontal:!0,vertical:!1};d().s[11]++;D.zoom={horizontal:!0,vertical:!1};d().s[12]++;try{d().s[13]++,D.displayName="GroupedColumn",d().s[14]++,D.__docgenInfo={description:"Represents a Column plot",displayName:"GroupedColumn",props:{useCanvas:{defaultValue:{value:"false"},description:"Should Canvas be used instead of SVG?",name:"useCanvas",required:!1,type:{name:"boolean"}},ys:{defaultValue:null,description:"The set of y fields to use to access the data for each plot",name:"ys",required:!0,type:{name:"string[]"}},x:{defaultValue:null,description:"The key of the field used for the x position",name:"x",required:!0,type:{name:"string"}},colors:{defaultValue:null,description:"The set of colors to use for the different plot",name:"colors",required:!1,type:{name:"IColor[]"}},canvas:{defaultValue:null,description:"An HTML Canvas if the plot should be rendering to canvas instead",name:"canvas",required:!1,type:{name:"HTMLCanvasElement"}},renderVirtualCanvas:{defaultValue:null,description:"This is an internally used function to allow the scatter plot to render to a virtual canvas",name:"renderVirtualCanvas",required:!1,type:{name:"(update: Transition<Element, unknown, any, unknown>) => void"}},onMouseOver:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse moves over an element for the first time",name:"onMouseOver",required:!1,type:{name:"IOnMouseOver"}},onMouseOut:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse moves out an element",name:"onMouseOut",required:!1,type:{name:"IOnMouseOut"}},onClick:{defaultValue:{value:"`() => {}`"},description:"A function that will be triggered whenever the mouse clicks on an element",name:"onClick",required:!1,type:{name:"IOnClick"}},noClip:{defaultValue:null,description:"Should we supress clipping for this plot.",name:"noClip",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"The color to use for the points",name:"color",required:!1,type:{name:"IColor"}},showInLegend:{defaultValue:null,description:"Should this series feature in the Legend?",name:"showInLegend",required:!1,type:{name:"boolean"}},scaleMode:{defaultValue:null,description:`An internal setting, to prefer using a brush scale. This is set automatically
on cloned plots by the <Brush /> components. You should not need to use it directly`,name:"scaleMode",required:!1,type:{name:"enum",value:[{value:'"plot"'},{value:'"brush"'}]}}}}}catch{}function le(){var e="/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/GroupedColumn/index.ts",t="1412fcea29e385f9e51f5170ddf88b939f9384f1",l=window,o="__coverage__",u={path:"/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/GroupedColumn/index.ts",statementMap:{},fnMap:{},branchMap:{},s:{},f:{},b:{},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/GroupedColumn/index.ts"],names:[],mappings:"AAAA,cAAc;AACd,cAAc;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"1412fcea29e385f9e51f5170ddf88b939f9384f1"},n=l[o]||(l[o]={});(!n[e]||n[e].hash!==t)&&(n[e]=u);var a=n[e];return le=function(){return a},a}le();function i(){var e="/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/Columns.tsx",t="284c5409f4f8ef175675f9a9af95567a5e67eb3f",l=window,o="__coverage__",u={path:"/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/Columns.tsx",statementMap:{0:{start:{line:10,column:16},end:{line:10,column:59}},1:{start:{line:10,column:35},end:{line:10,column:58}},2:{start:{line:11,column:18},end:{line:11,column:47}},3:{start:{line:12,column:2},end:{line:14,column:3}},4:{start:{line:13,column:4},end:{line:13,column:91}},5:{start:{line:15,column:2},end:{line:17,column:3}},6:{start:{line:16,column:4},end:{line:16,column:88}},7:{start:{line:18,column:2},end:{line:20,column:3}},8:{start:{line:19,column:4},end:{line:19,column:81}},9:{start:{line:21,column:2},end:{line:23,column:3}},10:{start:{line:22,column:4},end:{line:22,column:81}},11:{start:{line:24,column:2},end:{line:24,column:160}},12:{start:{line:24,column:90},end:{line:24,column:155}},13:{start:{line:26,column:0},end:{line:26,column:37}},14:{start:{line:27,column:0},end:{line:27,column:22}},15:{start:{line:28,column:0},end:{line:31,column:2}},16:{start:{line:32,column:0},end:{line:35,column:2}},17:{start:{line:36,column:0},end:{line:42,column:50}},18:{start:{line:38,column:4},end:{line:38,column:36}},19:{start:{line:40,column:4},end:{line:40,column:1396}}},fnMap:{0:{name:"Columns",decl:{start:{line:9,column:16},end:{line:9,column:23}},loc:{start:{line:9,column:84},end:{line:25,column:1}},line:9},1:{name:"(anonymous_1)",decl:{start:{line:10,column:28},end:{line:10,column:29}},loc:{start:{line:10,column:35},end:{line:10,column:58}},line:10},2:{name:"(anonymous_2)",decl:{start:{line:24,column:64},end:{line:24,column:65}},loc:{start:{line:24,column:90},end:{line:24,column:155}},line:24}},branchMap:{0:{loc:{start:{line:9,column:38},end:{line:9,column:53}},type:"default-arg",locations:[{start:{line:9,column:48},end:{line:9,column:53}}],line:9},1:{loc:{start:{line:9,column:55},end:{line:9,column:70}},type:"default-arg",locations:[{start:{line:9,column:65},end:{line:9,column:70}}],line:9},2:{loc:{start:{line:11,column:18},end:{line:11,column:47}},type:"binary-expr",locations:[{start:{line:11,column:18},end:{line:11,column:24}},{start:{line:11,column:28},end:{line:11,column:47}}],line:11},3:{loc:{start:{line:12,column:2},end:{line:14,column:3}},type:"if",locations:[{start:{line:12,column:2},end:{line:14,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:12},4:{loc:{start:{line:12,column:6},end:{line:12,column:24}},type:"binary-expr",locations:[{start:{line:12,column:6},end:{line:12,column:13}},{start:{line:12,column:17},end:{line:12,column:24}}],line:12},5:{loc:{start:{line:15,column:2},end:{line:17,column:3}},type:"if",locations:[{start:{line:15,column:2},end:{line:17,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:15},6:{loc:{start:{line:15,column:6},end:{line:15,column:26}},type:"binary-expr",locations:[{start:{line:15,column:6},end:{line:15,column:14}},{start:{line:15,column:18},end:{line:15,column:26}}],line:15},7:{loc:{start:{line:18,column:2},end:{line:20,column:3}},type:"if",locations:[{start:{line:18,column:2},end:{line:20,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:18},8:{loc:{start:{line:21,column:2},end:{line:23,column:3}},type:"if",locations:[{start:{line:21,column:2},end:{line:23,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:21}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0},f:{0:0,1:0,2:0},b:{0:[0],1:[0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0]},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/chart-io/chart-io/packages/react/src/lib/components/Plots/Column/Columns.tsx"],names:[],mappings:"AAuCe;AAUC;AAjDhB;AAGA;AACA;AAEA;AACA;AACA;AAkBO;AACH;AACA;AAEA;AACI;AAAqF;AAGzF;AACI;AAAkF;AAGtF;AACI;AAA0D;AAG9D;AACI;AAA0D;AAG9D;AAOJ;AAEA;AACA;AACA;AAAgB;AACA;AAEhB;AACA;AAAe;AACC;AAEhB;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"284c5409f4f8ef175675f9a9af95567a5e67eb3f"},n=l[o]||(l[o]={});(!n[e]||n[e].hash!==t)&&(n[e]=u);var a=n[e];return i=function(){return a},a}i();function L({ys:e,colors:t,stacked:l=(i().b[0][0]++,!1),grouped:o=(i().b[1][0]++,!1),...u}){i().f[0]++;const n=(i().s[0]++,p(v=>(i().f[1]++,i().s[1]++,f.theme(v)))),a=(i().s[2]++,i().b[2][0]++,t||(i().b[2][1]++,n.series.colors));return i().s[3]++,i().b[4][0]++,l&&(i().b[4][1]++,o)?(i().b[3][0]++,i().s[4]++,X("E003","Column plots do not support both being stacked and grouped")):i().b[3][1]++,i().s[5]++,i().b[6][0]++,!l&&(i().b[6][1]++,!o)?(i().b[5][0]++,i().s[6]++,X("E004","Multiple Column plots must be either stacked or grouped")):i().b[5][1]++,i().s[7]++,l?(i().b[7][0]++,i().s[8]++,V.jsx(P,{ys:e,colors:a,...u})):(i().b[7][1]++,i().s[9]++,o?(i().b[8][0]++,i().s[10]++,V.jsx(D,{ys:e,colors:a,...u})):(i().b[8][1]++,i().s[11]++,V.jsx(oe.Fragment,{children:e.map((v,g)=>(i().f[2]++,i().s[12]++,T.createElement(x,{...u,key:v,y:v,color:a[g]})))})))}i().s[13]++;L.requiresVirtualCanvas=!0;i().s[14]++;L.isPlot=!0;i().s[15]++;L.brush={horizontal:!0,vertical:!1};i().s[16]++;L.zoom={horizontal:!0,vertical:!1};i().s[17]++;try{i().s[18]++,L.displayName="Columns",i().s[19]++,L.__docgenInfo={description:"Represents a set of Column Plots",displayName:"Columns",props:{stacked:{defaultValue:{value:"false"},description:"Should the column plots be stacked based on the x-value?",name:"stacked",required:!1,type:{name:"boolean"}},grouped:{defaultValue:{value:"false"},description:"Should the column plots be grouped based on the x-value?",name:"grouped",required:!1,type:{name:"boolean"}},x:{defaultValue:null,description:"The key of the field used for the x position",name:"x",required:!0,type:{name:"string"}},ys:{defaultValue:null,description:"The set of y fields to use to access the data for each plot",name:"ys",required:!0,type:{name:"string[]"}},colors:{defaultValue:null,description:"The set of colors to use for the different plot",name:"colors",required:!1,type:{name:"IColor[]"}},interactive:{defaultValue:null,description:"Should the plot be interactive and be able to trigger markers & tooltips?",name:"interactive",required:!1,type:{name:"boolean"}},useCanvas:{defaultValue:null,description:"Should this plot use an HTML Canvas instead of SVG?",name:"useCanvas",required:!1,type:{name:"boolean"}}}}}catch{}export{L as C,x as a};
//# sourceMappingURL=Columns-Dzd93bGI.js.map
