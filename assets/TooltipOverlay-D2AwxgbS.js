import{j as e}from"./jsx-runtime-BjG_zV1W.js";import{useMDXComponents as r}from"./index-D-2zTmTn.js";import{M as d,C as i}from"./index-Dw1MpZ3G.js";import{Default as s,CustomTooltip as l,CustomTooltipItems as c}from"./TooltipOverlay.stories-DEHQwwRn.js";import"./index-DpTt3J-R.js";import"./iframe-Bho3GZXG.js";import"./index-D5nvoAmD.js";import"./index-B77L4dcM.js";import"./index-DrFu-skq.js";import"./react-redux-QXbQKOoW.js";import"./index-BEVv-T-d.js";import"./Tooltip-DL_pUHjQ.js";import"./index-BH_8yRl6.js";import"./TooltipItem-CWwi-etI.js";import"./index-BmYvQTbQ.js";import"./Circle-Qf3Tu8hN.js";import"./Line-BjKan0E4.js";import"./Square-CZVurtTs.js";import"./index-_rl-6daV.js";import"./renderChart-BLsEhK0I.js";import"./test-utils-C-DEfvFY.js";import"./client-CbGTh6y2.js";import"./index-Dcm7olAB.js";function n(o){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(d,{title:"Components/TooltipOverlay"}),`
`,e.jsx(t.h1,{id:"tooltipoverlay-component",children:"TooltipOverlay Component"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"<TooltipOverlay>"})," component allows us to overlay a ",e.jsx(t.a,{href:"?path=/docs/components-tooltipoverlay-tooltip--docs",children:"Tooltip"})," component containing multiple entries, which is useful for showing the information behind a data point when interacting with a chart."]}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"<TooltipOverlay>"})," extracts out tooltip item information from the Redux store to determine when the tooltip should be shown, and the content that should be presented."]}),`
`,e.jsx(i,{of:s}),`
`,e.jsxs(t.h3,{id:"tooltipoverlay-props",children:[e.jsx(t.code,{children:"<TooltipOverlay>"})," Props"]}),`
`,e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsxs(t.tr,{children:[e.jsx(t.th,{children:"Prop"}),e.jsx(t.th,{children:"Type"}),e.jsx(t.th,{children:"Default"}),e.jsx(t.th,{children:"Note"})]})}),e.jsxs(t.tbody,{children:[e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.code,{children:"offset"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"number"})}),e.jsx(t.td,{children:"20"}),e.jsx(t.td,{children:"The number of pixels from the cursor that the tooltip should be offset"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.code,{children:"onlyNearest"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"boolean"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"true"})}),e.jsx(t.td,{children:"Should only the nearest tooltip items be shown? This is used to enforce only the nearest marker when multiple points could be shown such as with multi Line or Area charts"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.code,{children:"formatters"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"object"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"{}"})}),e.jsxs(t.td,{children:["A keyed collection of format objects. Key should align with ",e.jsx(t.code,{children:"x"})," or ",e.jsx(t.code,{children:"y"})," fields provided to axis/scales or plots. See table below"]})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.code,{children:"tooltipComponent"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"React.ComponentType<ITooltipProps>"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"An optional override component for the tooltip itself (see example below)"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.code,{children:"tooltipItemComponent"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"React.ComponentType<ITooltipItemProps>"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"An optional override component for the tooltip items (see example below)"})]})]})]}),`
`,e.jsx(t.p,{children:"The contents of a format object should match:"}),`
`,e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsxs(t.tr,{children:[e.jsx(t.th,{children:"Prop"}),e.jsx(t.th,{children:"Type"}),e.jsx(t.th,{children:"Default"}),e.jsx(t.th,{children:"Note"})]})}),e.jsxs(t.tbody,{children:[e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.code,{children:"prefix"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"A string to prefix the tooltip value with"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.code,{children:"suffix"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsx(t.td,{children:"A string to suffix the tooltip value with"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.code,{children:"formatFunc"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"function"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"undefined"})}),e.jsxs(t.td,{children:["A function that returns a custom tooltip value. ",e.jsx(t.code,{children:"(name: string, value: string) => string"})]})]})]})]}),`
`,e.jsx("br",{}),`
`,e.jsx(t.h2,{id:"adding-tooltip-items-programatically",children:"Adding Tooltip items Programatically"}),`
`,e.jsx(t.p,{children:"To add a TooltipItem programatically, typically each plot that wishes to display an item in the tooltip dispatches an action to to the redux store, and is responsible for removing it later using the following pattern;"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-javascript",children:`useEffect(() => {
    // Add the tooltip item
    dispatch(eventActions.addTooltipItem(tooltipItem));

    // Remove the tooltip item next time the useEffect is called.
    return () => {
        dispatch(eventActions.removeTooltipItem(tooltipItem));
    }
})
`})}),`
`,e.jsx(t.h3,{id:"tooltipitem-schema",children:"TooltipItem Schema:"}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note"}),": This is referring to the shape of the data in the Redux store. Not the ",e.jsx(t.code,{children:"<TooltipItem>"})," component."]}),`
`]}),`
`,e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsxs(t.tr,{children:[e.jsx(t.th,{children:"Prop"}),e.jsx(t.th,{children:"Type"}),e.jsx(t.th,{children:"Note"})]})}),e.jsxs(t.tbody,{children:[e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:e.jsx(t.code,{children:"datum*"})})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"object"})}),e.jsx(t.td,{children:"The datum from the dataset that triggered the tooltip"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.strong,{children:e.jsx(t.code,{children:"name*"})})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:"The name of the value/series being shown in the tooltip"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.code,{children:"value"})}),e.jsx(t.td,{children:"primitive"}),e.jsx(t.td,{children:"The value of the point to display in the tooltip"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.code,{children:"icon"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:'One of ["circle", "square", "line", "none"]'})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.code,{children:"fill"})}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:"The colour of the series"})]})]})]}),`
`,e.jsx("br",{}),`
`,e.jsx(t.h2,{id:"customizing-the-tooltip",children:"Customizing the tooltip"}),`
`,e.jsxs(t.p,{children:["By providing a ",e.jsx(t.code,{children:"tooltipComponent"})," prop to the ",e.jsx(t.code,{children:"TooltipOverlay"})," you can customize the rendering of the tooltip. This provides a more convienient override to implementing an entire custom Tooltip overlay yourself."]}),`
`,e.jsx(i,{of:l}),`
`,e.jsx(t.h2,{id:"customizing-the-tooltip-items",children:"Customizing the tooltip items"}),`
`,e.jsxs(t.p,{children:["By providing a ",e.jsx(t.code,{children:"tooltipItemComponent"})," prop to the ",e.jsx(t.code,{children:"TooltipOverlay"})," you can customize the rendering of the tooltip items within the tooltip. This provides a more convienient override to implementing an entire custom Tooltip overlay yourself."]}),`
`,e.jsx(i,{of:c})]})}function R(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(n,{...o})}):n(o)}export{R as default};
//# sourceMappingURL=TooltipOverlay-D2AwxgbS.js.map
