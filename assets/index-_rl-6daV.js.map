{"version":3,"file":"index-_rl-6daV.js","sources":["../../src/lib/hoc/withSVG.tsx","../../src/lib/hoc/withCanvas.tsx","../../src/lib/hoc/withStore.tsx","../../src/lib/hoc/withXYPlot.tsx","../../src/lib/hoc/index.ts"],"sourcesContent":["import { logWarning } from \"@chart-io/core\";\n\nimport React, { useRef } from \"react\";\n\n/**\n * Wraps a D3 layer to make it work as an SVG component\n * @param  WrappedComponent     The D3 layer to render to the SVG\n * @param  className            An optional class name to add to the DOM\n * @return                      The wrapped layer\n */\nconst withSVG = <P extends object>(WrappedComponent: React.ComponentType<P>, className: string) => {\n    if (!className) {\n        logWarning(\"W003\", \"className is required when using the withSVG higher order component\");\n    }\n\n    /**\n     * Wraps a component within an SVG group\n     * @param  {...any}            props        The rest of the props\n     * @return {ReactDOMComponent}              The wrapped layer\n     */\n    return function withSVG(props) {\n        const layer = useRef(null);\n\n        return (\n            <g ref={layer} className={`g-${className}`}>\n                <React.StrictMode>\n                    <WrappedComponent {...props} layer={layer} />\n                </React.StrictMode>\n            </g>\n        );\n    };\n};\n\nexport { withSVG };\n","import { chartSelectors, IState, logWarning } from \"@chart-io/core\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/**\n * Wraps a D3 layer to make it work as a Canvas component\n * @param  WrappedComponent     The D3 layer to render to the Canvas\n * @param  className            An optional class name to add to the DOM\n * @return                      The wrapped layer\n */\nconst withCanvas = <P extends object>(WrappedComponent: React.ComponentType<P>, className: string) => {\n    if (!className) {\n        logWarning(\"W003\", \"className is required when using the withCanvas higher order component\");\n    }\n\n    /**\n     * Wraps a component within a Canvas\n     * @param  {...any}            props        The rest of the props\n     * @return {ReactDOMComponent}              The wrapped layer\n     */\n    return function withCanvas(props) {\n        const canvas = useRef(null);\n        const [layer, setLayer] = useState({});\n\n        const width = useSelector((s: IState) => chartSelectors.dimensions.width(s));\n        const height = useSelector((s: IState) => chartSelectors.dimensions.height(s));\n\n        useEffect(() => {\n            setLayer({ current: document.createElement(\"custom\") });\n        }, []);\n\n        return (\n            <React.Fragment>\n                <foreignObject width={width} height={height} style={styles.foreignObject}>\n                    <canvas\n                        className={`canvas ${className}`}\n                        width={width}\n                        height={height}\n                        ref={canvas}\n                        style={styles.canvas}\n                    ></canvas>\n                </foreignObject>\n                <WrappedComponent {...props} layer={layer} canvas={canvas.current} />\n            </React.Fragment>\n        );\n    };\n};\n\nconst styles = {\n    canvas: {\n        position: \"absolute\" as const,\n        left: 0,\n        top: 0,\n    },\n    foreignObject: {\n        pointerEvents: \"none\" as const,\n    },\n};\n\nexport { withCanvas };\n","import { createStore, IStore } from \"@chart-io/core\";\n\nimport type { AnyAction } from \"@reduxjs/toolkit\";\nimport React, { forwardRef, useMemo } from \"react\";\nimport { Provider } from \"react-redux\";\n\nexport type IOnStoreCreated = (store: IStore) => void;\n\nexport type ICustomReducers = Record<string, <T>(state: T, action: AnyAction) => T>;\n\nexport interface IWithStoreProps {\n    /**\n     * Callback triggered when the Redux store is first created\n     * @param  store          The Redux store that has been created\n     */\n    onStoreCreated?: IOnStoreCreated;\n    /**\n     * A set of custom reducers that can be registered into Redux\n     * @example\n     * const customReducer = (state: ICustomState, action: ICustomAction): ICustomState => {\n     *     switch(action.type) {\n     *        case \"Add\":\n     *            return { ...state, count: state.count + 1 };\n     *        case \"Subtract\":\n     *            return { ...state, count: state.count - 1 };\n     *        default:\n     *            return state;\n     *     }\n     * }\n     */\n    customReducers?: ICustomReducers;\n}\n\n/**\n * Wraps a React component to add a redux store\n * @param  WrappedComponent     The component to render\n * @return                      The wrapped component\n */\nconst withStore = <P extends object>(WrappedComponent: React.ComponentType<P>) => {\n    /**\n     * Wraps a component within a Redux store provider\n     * @param  {...any}    props        All the props\n     * @param  {any}       ref          An optional useRef reference to pass through (required for forwardRef's)\n     * @return {ReactDOMComponent}      The wrapped componet\n     */\n    function withStore(props: IWithStoreProps, ref) {\n        const { onStoreCreated, customReducers } = props;\n        const store = useMemo(() => createStore(customReducers), [customReducers]);\n\n        // If the consumer needs access to the store then fire\n        // the callback\n        if (onStoreCreated) {\n            onStoreCreated(store);\n        }\n\n        // https://stackoverflow.com/a/54583335/21061\n        return (\n            <Provider store={store}>\n                <WrappedComponent {...(props as P)} ref={ref} />\n            </Provider>\n        );\n    }\n\n    return forwardRef(withStore);\n};\n\nexport { withStore };\n","/* eslint-disable react/prop-types */\nimport { d3 } from \"@chart-io/core\";\nimport { chartSelectors, IState, logDebug } from \"@chart-io/core\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/**\n * Wraps a plot and handles some of the basics such as missing layers or scales\n * @param  WrappedComponent     The D3 layer to render\n * @return                      The wrapped layer\n */\nconst withXYPlot = <P extends object>(WrappedComponent: React.ComponentType<P>) => {\n    /**\n     * Wraps a component and handles some of the potentially missing parts\n     * @param  {...any}    options.props        The rest of the props\n     * @return {ReactDOMComponent}              The wrapped layer\n     */\n    return function withXYPlot({ x, y, xs, ys, noClip, ...props }) {\n        const xScale = useSelector((s: IState) => chartSelectors.scales.getScale(s, x || xs?.[0], \"plot\"));\n        const yScale = useSelector((s: IState) => chartSelectors.scales.getScale(s, y || ys?.[0], \"plot\"));\n        const plotClipPath = useSelector((s: IState) => chartSelectors.plotClipPath(s));\n\n        // TODO: need to do the same with the virtual canvas\n\n        // We need to pass the ref through a useState due to the problem\n        // of forwarding refs - https://reactjs.org/docs/forwarding-refs.html\n        const [layer, setLayer] = useState({ current: undefined });\n        useEffect(() => {\n            setLayer(props.layer);\n\n            // noClip is used to suppress clipping on brush plots\n            if (props.layer.current && !noClip) {\n                d3.select(props.layer.current).attr(\"clip-path\", `url(#${plotClipPath})`);\n            }\n        }, [props.layer, plotClipPath, noClip]);\n\n        // Unable to render without the layer avaliable\n        if (!layer.current) {\n            logDebug(\"Skipping render - layer not yet avaliable\");\n            return null;\n        }\n\n        if (!xScale) {\n            logDebug(`Skipping render - X scale [${x || xs?.[0]}] not avaliable`);\n        } else if (!yScale) {\n            logDebug(`Skipping render - Y scale [[${y || ys?.[0]}]] not avaliable`);\n        }\n\n        if (!xScale || !yScale) {\n            return null;\n        }\n\n        // https://stackoverflow.com/a/54583335/21061\n        return <WrappedComponent layer={layer} x={x} y={y} ys={ys} xs={xs} {...(props as P)} />;\n    };\n};\n\nexport { withXYPlot };\n","export * from \"./withSVG\";\nexport * from \"./withCanvas\";\nexport * from \"./withStore\";\nexport * from \"./withXYPlot\";\n"],"names":["cov_1w93pqjc83","s","withSVG","WrappedComponent","className","f","b","logWarning","cov_2auqn7a80c","path","hash","global","gcv","coverageData","coverage","actualCoverage","withCanvas","withCanvas2","props","canvas","useRef","layer","setLayer","useState","width","useSelector","chartSelectors","dimensions","height","useEffect","current","document","createElement","jsxs","React","Fragment","children","jsx","style","styles","foreignObject","ref","cov_qcgl7gcrs","cov_1o3ra80xw2","withXYPlot","x","y","xs","ys","noClip","xScale","scales","getScale","yScale","plotClipPath","cov_wzrzwbol"],"mappings":"82DAEAA,EAAA,EAAAC,EA0BY,CAAA,IAAA,MAAAC,EAAAA,CAAAC,EAAAC,KAAAJ,EAAA,EAAAK,EAAA,CAAA,IAAAL,EAAA,EAAAC,EAGZ,CAAA,IAAAG,EAEAJ,IAAAM,EAAAN,CAAAA,EAAAA,CAAAA,KAFAA,EAAA,EAAAM,EAAAN,CAAAA,EAAAA,CAAAA,IAAAA,EAAA,EAAAC,OAEAM,EAAA,OAAA,qEAAA,GAAAP,EAAA,EAAAC,mXCWY,SAAAO,GAAA,CAAA,IAAAC,EAAA,gFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,gFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,KAAA,cAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,O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"}