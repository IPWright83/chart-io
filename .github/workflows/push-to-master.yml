---
name: On Push to Master

on:
  push:
    branches:
      - "master"

jobs:
  lint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: pnpm/action-setup@v2.2.2
      - name: pnpm Install
        run: pnpm install
      - name: Lint
        run: pnpm run lint

  audit:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: pnpm/action-setup@v2.2.2
      - name: pnpm Install
        run: pnpm install
      - name: Run Linting
        run: pnpm audit --production --audit-level moderate

  unit:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: pnpm/action-setup@v2.2.2
      - name: pnpm Install
        run: pnpm install
      - name: Run Unit Tests
        run: pnpm test

  version_bump:
    runs-on: ubuntu-latest
    needs: [lint, audit, unit]
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: "Automated Version Bump"
        uses: "phips28/gh-action-bump-version@master"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commit-message: "CI: bump version to {{version}} [skip ci]"
      - name: 'Output Step'
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"

  deploy_storybook:
    needs: [lint, audit, unit]
    if: "!contains(github.event.head_commit.message, 'skip storybook')"
    runs-on: ubuntu-latest
    steps:
      # Setup .npmrc file to publish to npm
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"
      - uses: pnpm/action-setup@v2.2.2
      - name: pnpm Install
        run: pnpm install
      - run: pnpm run deploy-storybook -- --ci
        env:
          GH_TOKEN: ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}

  chromatic:
    needs: [lint, audit, unit]
    if: "!contains(github.event.head_commit.message, 'skip chromatic')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: pnpm/action-setup@v2.2.2
      - name: pnpm Install
        run: pnpm install
      - name: Chromatic
        run: npx chromatic --project-token ${{ secrets.CHROMATIC_PROJECT_TOKEN }} --exit-zero-on-changes --auto-accept-changes
    
#   auto_release:
#     needs: [version_bump]
#     runs-on: ubuntu-latest
#     steps:
#       - name: echo version
#         run: echo ${{ steps.version_bump.outputs.newTag }}
#       - uses: "marvinpinto/action-automatic-releases@latest"
#         with:
#           repo_token: ${{ secrets.GITHUB_TOKEN }}
#           prerelease: false
#           automatic_release_tag: ${{ steps.version_bump.outputs.newTag }}

#   pnpm_publish:
#     runs-on: ubuntu-latest
#     needs: [auto_release]
#     steps:
#       - uses: actions/checkout@v2
#       # Setup .npmrc file to publish to npm
#       - uses: actions/setup-node@v3
#         with:
#           node-version: 16
#           registry-url: "https://registry.npmjs.org"
#       - uses: pnpm/action-setup@v2.2.2
#       - name: pnpm Install
#         run: pnpm install
#       - run: pnpm publish
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
